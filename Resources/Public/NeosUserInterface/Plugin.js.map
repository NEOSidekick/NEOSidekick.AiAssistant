{
  "version": 3,
  "sources": ["../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/readFromConsumerApi.ts", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/react-ui-components/index.js", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-redux-store/index.js", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/react/index.js", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/react-redux/index.js", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/redux-saga/effects/index.js", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/prop-types/index.js", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-decorators/index.js", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/index.ts", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/registry/AbstractRegistry.ts", "../../Private/NeosUserInterface/node_modules/@neos-project/positional-array-sorter/src/positionalArraySorter.ts", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/registry/SynchronousRegistry.ts", "../../Private/NeosUserInterface/src/manifest.tsx", "../../Private/NeosUserInterface/src/MagicTextFieldEditor.js", "../../Private/NeosUserInterface/src/MagicTextAreaEditor.js", "../../Private/NeosUserInterface/src/ExternalService.ts", "../../Private/NeosUserInterface/src/ContentService.ts"],
  "sourcesContent": ["export default function readFromConsumerApi(key: string): (...args: any[]) => any {\n    return (...args: any[]) => {\n        if ((window as any)['@Neos:HostPluginAPI'] && (window as any)['@Neos:HostPluginAPI'][`@${key}`]) {\n            return (window as any)['@Neos:HostPluginAPI'][`@${key}`](...args);\n        }\n\n        throw new Error('You are trying to read from a consumer api that hasn\\'t been initialized yet!');\n    };\n}\n", "import readFromConsumerApi from '../../../readFromConsumerApi';\n\nmodule.exports = readFromConsumerApi('NeosProjectPackages')().ReactUiComponents;\n", "import readFromConsumerApi from '../../../readFromConsumerApi';\n\nmodule.exports = readFromConsumerApi('NeosProjectPackages')().NeosUiReduxStore;\n", "import readFromConsumerApi from '../../../readFromConsumerApi';\n\nmodule.exports = readFromConsumerApi('vendor')().React;\n", "import readFromConsumerApi from '../../../readFromConsumerApi';\n\nmodule.exports = readFromConsumerApi('vendor')().reactRedux;\n", "import readFromConsumerApi from '../../../../readFromConsumerApi';\n\nmodule.exports = readFromConsumerApi('vendor')().reduxSagaEffects;\n", "import readFromConsumerApi from '../../../readFromConsumerApi';\n\nmodule.exports = readFromConsumerApi('vendor')().PropTypes;\n", "import readFromConsumerApi from '../../../readFromConsumerApi';\n\nmodule.exports = readFromConsumerApi('NeosProjectPackages')().NeosUiDecorators;\n", "import createConsumerApi from './createConsumerApi';\nimport readFromConsumerApi from './readFromConsumerApi';\nimport {\n    SynchronousRegistry,\n    SynchronousMetaRegistry\n} from './registry/index';\n\nexport default readFromConsumerApi('manifest');\n\nexport {\n    createConsumerApi,\n    readFromConsumerApi,\n    SynchronousRegistry,\n    SynchronousMetaRegistry\n};\n", "export default class AbstractRegistry {\n    public SERIAL_VERSION_UID = 'd8a5aa78-978e-11e6-ae22-56b6b6499611';\n\n    public description: string;\n\n    constructor(description: string) {\n        // The description of the registry, containing examples, what is in there.\n        this.description = description;\n    }\n}\n", "interface Value {\n    [propName: string]: any;\n}\ntype Index = number;\n\n/**\n * Flexible array sorter that sorts an array according to a \"position\" meta data.\n * The expected format for the subject is:\n *\n * [\n *   [\n *     'key' => 'bar'\n *     'position' => '<position-string>',\n *   ],\n *   [\n *     'key' => 'baz'\n *     'position' => '<position-string>',\n *   ],\n * ]\n *\n * The <position-string> supports one of the following syntax:\n *  start (<weight>)\n *  end (<weight>)\n *  before <key> (<weight>)\n *  after <key> (<weight>)\n *  <numerical-order>\n *\n * where \"weight\" is the priority that defines which of two conflicting positions overrules the other,\n * \"key\" is a string that references another key in the subject\n * and \"numerical-order\" is an integer that defines the order independently from the other keys.\n */\ntype PositionAccessor = (value: Value) => string | number;\nconst positionalArraySorter = <T extends Value[]>(subject: T, position: string | PositionAccessor = 'position', idKey = 'key'): T => {\n    const positionAccessor = typeof position === 'string' ? (value: Value) => value[position] : position;\n    // internally we work with string representations of the index/item-key\n    const indexMapping: {[key: string]: Index} = {};\n    // all \"normal\" keys with numerical or no \"position\", grouped by that position\n    const middleKeys: {[position: number]: string[]} = {};\n    // all keys of items with \"position\" \"start*\" grouped by weight\n    const startKeys: {[weight: number]: string[]} = {};\n    // all keys of items with \"position\" \"end*\" grouped by weight\n    const endKeys: {[weight: number]: string[]} = {};\n    // all keys of items with \"position\" \"before*\" grouped by reference key, grouped by weight\n    const beforeKeys: {[key: string]: {[weight: number]: string[]}} = {};\n    // all keys of items with \"position\" \"after*\" grouped by reference key, grouped by weight\n    const afterKeys: {[key: string]: {[weight: number]: string[]}} = {};\n\n    // group items\n    subject.forEach((item, index) => {\n        const key = item[idKey] ? item[idKey] : String(index);\n        indexMapping[key] = index;\n        const positionValue = positionAccessor(item);\n        const position = String(positionValue ? positionValue : index);\n        let invalid = false;\n        if (position.startsWith('start')) {\n            const weightMatch = position.match(/start\\s+(\\d+)/);\n            const weight = weightMatch && weightMatch[1] ? Number(weightMatch[1]) : 0;\n            if (!startKeys[weight]) {\n                startKeys[weight] = [];\n            }\n            startKeys[weight].push(key);\n        } else if (position.startsWith('end')) {\n            const weightMatch = position.match(/end\\s+(\\d+)/);\n            const weight = weightMatch && weightMatch[1] ? Number(weightMatch[1]) : 0;\n            if (!endKeys[weight]) {\n                endKeys[weight] = [];\n            }\n            endKeys[weight].push(key);\n        } else if (position.startsWith('before')) {\n            const match = position.match(/before\\s+(\\S+)(\\s+(\\d+))?/);\n            if (!match) {\n                invalid = true;\n            } else {\n                const reference = match[1];\n                const weight = match[3] ? Number(match[3]) : 0;\n                if (!beforeKeys[reference]) {\n                    beforeKeys[reference] = {};\n                }\n                if (!beforeKeys[reference][weight]) {\n                    beforeKeys[reference][weight] = [];\n                }\n                beforeKeys[reference][weight].push(key);\n            }\n        } else if (position.startsWith('after')) {\n            const match = position.match(/after\\s+(\\S+)(\\s+(\\d+))?/);\n            if (!match) {\n                invalid = true;\n            } else {\n                const reference = match[1];\n                const weight = match[3] ? Number(match[3]) : 0;\n                if (!afterKeys[reference]) {\n                    afterKeys[reference] = {};\n                }\n                if (!afterKeys[reference][weight]) {\n                    afterKeys[reference][weight] = [];\n                }\n                afterKeys[reference][weight].push(key);\n            }\n        } else {\n            invalid = true;\n        }\n        if (invalid) {\n            let numberPosition = parseFloat(position);\n            if (isNaN(numberPosition) || !isFinite(numberPosition)) {\n                numberPosition = index;\n            }\n            if (!middleKeys[numberPosition]) {\n                middleKeys[numberPosition] = [];\n            }\n            middleKeys[numberPosition].push(key);\n        }\n    });\n\n    const resultStart: string[] = [];\n    const resultMiddle: string[] = [];\n    const resultEnd: string[] = [];\n    const processedKeys: string[] = [];\n\n    // helper function to retrieve all weights in e.g. beforeKeys[...] in the necessary order\n    const sortedWeights = (dict: {[key: number]: any}, asc: boolean) => {\n        const weights = Object.keys(dict).map(x => Number(x)).sort((a, b) => a - b);\n        return asc ? weights : weights.reverse();\n    };\n    // helper function to add all keys of a grouping to a then ordered result set considering before and after keys\n    const addToResults = (keys: string[], result: string[]) => {\n        keys.forEach(key => {\n            if (processedKeys.indexOf(key) >= 0) {\n                return;\n            }\n            processedKeys.push(key);\n            if (beforeKeys[key]) {\n                const beforeWeights = sortedWeights(beforeKeys[key], true);\n                for (const i of beforeWeights) {\n                    addToResults(beforeKeys[key][i], result);\n                }\n            }\n            result.push(key);\n            if (afterKeys[key]) {\n                const afterWeights = sortedWeights(afterKeys[key], false);\n                for (const i of afterWeights) {\n                    addToResults(afterKeys[key][i], result);\n                }\n            }\n        });\n    };\n\n    // add all start* keys weighted in descending order\n    for (const i of sortedWeights(startKeys, false)) {\n        addToResults(startKeys[i], resultStart);\n    }\n    // add all middle keys weighted in ascending order\n    for (const i of sortedWeights(middleKeys, true)) {\n        addToResults(middleKeys[i], resultMiddle);\n    }\n    // add all after* keys weighted in ascending order\n    for (const i of sortedWeights(endKeys, true)) {\n        addToResults(endKeys[i], resultEnd);\n    }\n    // orphaned items\n    for (const key of Object.keys(beforeKeys)) {\n        if (processedKeys.indexOf(key) >= 0) {\n            continue;\n        }\n        // add all \"orphaned\" before* key in descending order before the middle keys\n        for (const i of sortedWeights(beforeKeys[key], false)) {\n            addToResults(beforeKeys[key][i], resultStart);\n        }\n    }\n    for (const key of Object.keys(afterKeys)) {\n        if (processedKeys.indexOf(key) >= 0) {\n            continue;\n        }\n        // add all \"orphaned\" after* key in descending order before the end* keys\n        for (const i of sortedWeights(afterKeys[key], false)) {\n            addToResults(afterKeys[key][i], resultMiddle);\n        }\n    }\n    const sortedKeys = [...resultStart, ...resultMiddle, ...resultEnd];\n    // TODO fix type assertion\n    return sortedKeys.map(key => indexMapping[key]).map(i => subject[i]) as T;\n};\nexport default positionalArraySorter;\n", "import AbstractRegistry from './AbstractRegistry';\nimport positionalArraySorter from '@neos-project/positional-array-sorter';\n\ninterface Entry<T> {\n    key: string;\n    value: T;\n    position?: string | number;\n}\n\nexport default class SynchronousRegistry<T> extends AbstractRegistry {\n    protected _registry: Array<Entry<T>>;\n\n    constructor(description: string) {\n        super(description);\n\n        this._registry = [];\n    }\n\n    /*\n     * Sets a key in a registry to the given value\n     *\n     * @param string key Registry key to set. May contain slashes to delimit nested keys, e.g. \"nested/key\".\n     * @param Object value A value to set.\n     * @param string|number position A position inside a registry that the given element should get, supports full positionalArraySorter syntax. Defaults to 0.\n     * @return returns the value element.\n     */\n    public set(key: string, value: T, position: string | number = 0): T {\n        if (typeof key !== 'string') {\n            throw new Error('Key must be a string');\n        }\n        if (typeof position !== 'string' && typeof position !== 'number') {\n            throw new Error('Position must be a string or a number');\n        }\n        const entry: Entry<T> = {key, value};\n        if (position) {\n            entry.position = position;\n        }\n        const indexOfItemWithTheSameKey = this._registry.findIndex(item => item.key === key);\n        if (indexOfItemWithTheSameKey === -1) {\n            this._registry.push(entry);\n        } else {\n            this._registry[indexOfItemWithTheSameKey] = entry;\n        }\n\n        return value;\n    }\n\n    /*\n     * Gets a registry value at a certain key\n     */\n    public get(key: string): T | null {\n        if (typeof key !== 'string') {\n            console.error('Key must be a string'); // tslint:disable-line no-console\n            return null;\n        }\n        const result = this._registry.find(item => item.key === key);\n        return result ? result.value : null;\n    }\n\n    private _getChildrenWrapped(searchKey: string): any[] {\n        const unsortedChildren = this._registry.filter(item => item.key.indexOf(searchKey + '/') === 0);\n        return positionalArraySorter(unsortedChildren);\n    }\n\n    /*\n     * Gets all values starting with a certain key, as an Object\n     *\n     * @param string searchKey to match, e.g. `test` would match `test/abc` and `test/abc2`, but not `test` itself\n     * @return Object Result Object\n     */\n    public getChildrenAsObject(searchKey: string): {[propName: string]: T | undefined} {\n        const result: {[propName: string]: T | undefined} = {};\n        this._getChildrenWrapped(searchKey).forEach(item => {\n            result[item.key] = item.value;\n        });\n        return result;\n    }\n\n    /*\n     * Gets all values starting with a certain key, as a list\n     *\n     * @param string searchKey to match, e.g. `test` would match `test/abc` and `test/abc2`, but not `test` itself\n     * @return array\n     */\n    public getChildren(searchKey: string): T[] {\n        return this._getChildrenWrapped(searchKey).map(item => item.value);\n    }\n\n    /*\n     * Checks if a certain key exists in the registry\n     *\n     * @param string key\n     * @return true|undefined\n     */\n    public has(key: string): boolean {\n        if (typeof key !== 'string') {\n            console.error('Key must be a string'); // tslint:disable-line:no-console\n            return false;\n        }\n        return Boolean(this._registry.find(item => item.key === key));\n    }\n\n    private _getAllWrapped(): any[] {\n        return positionalArraySorter(this._registry);\n    }\n\n    /*\n     * Gets all values, as an object\n     *\n     * @return Object Result object\n     */\n    public getAllAsObject(): {[propName: string]: T | undefined} {\n        const result: {[propName: string]: T} = {};\n        this._getAllWrapped().forEach(item => {\n            result[item.key] = item.value;\n        });\n        return result;\n    }\n\n    /*\n     * Gets all values, as a list, with id property on each object set to its key\n     *\n     * @return array Result list\n     */\n    public getAllAsList(): T[] {\n        return this._getAllWrapped().map(item => Object.assign({id: item.key}, item.value));\n    }\n}\n", "// @ts-ignore\nimport manifest, {SynchronousRegistry} from \"@neos-project/neos-ui-extensibility\";\n// @ts-ignore\nimport { IconButton, Headline } from \"@neos-project/react-ui-components\";\n// @ts-ignore\nimport { actionTypes, selectors } from '@neos-project/neos-ui-redux-store';\n// @ts-ignore\nimport React from 'react';\n// @ts-ignore\nimport { useSelector } from 'react-redux';\n// @ts-ignore\nimport { takeLatest } from 'redux-saga/effects';\nimport MagicTextFieldEditor from './MagicTextFieldEditor';\nimport MagicTextAreaEditor from './MagicTextAreaEditor';\nimport \"./style.css\";\nimport {createExternalService} from './ExternalService';\nimport {createContentService} from './ContentService';\n\nexport default function delay(timeInMilliseconds: number): Promise<void> {\n    // @ts-ignore\n    return new Promise(resolve => setTimeout(resolve, timeInMilliseconds));\n}\n\nmanifest(\"NEOSidekick.AiAssistant\", {}, (globalRegistry, {store, frontendConfiguration}) => {\n    const configuration = frontendConfiguration['NEOSidekick.AiAssistant'];\n    if (configuration === null || configuration.enabled === false) {\n        return\n    }\n\n    globalRegistry.set('NEOSidekick.AiAssistant', new SynchronousRegistry(`test`))\n    const externalService = createExternalService(frontendConfiguration);\n    globalRegistry.get('NEOSidekick.AiAssistant').set('externalService', externalService)\n    const contentService = createContentService(globalRegistry, store);\n    globalRegistry.get('NEOSidekick.AiAssistant').set('contentService', contentService)\n\n    const containerRegistry = globalRegistry.get('containers');\n    const App = containerRegistry.get('App');\n\tconst WrappedApp = (props: Record<string, unknown>) => {\n        const state = localStorage.getItem('NEOSidekick') ? JSON.parse(localStorage.getItem('NEOSidekick')) : { open: true, fullscreen: false };\n\t\tconst [isOpen, setOpen] = React.useState(state?.open);\n        const setOpenAndPersistState = (open) => {\n            setOpen(open);\n            state.open = open;\n            localStorage.setItem('NEOSidekick', JSON.stringify(state));\n        }\n\n        const [isFullscreen, setFullscreen] = React.useState(state?.fullscreen);\n        const setFullscreenAndPersistState = (fullscreen) => {\n            setFullscreen(fullscreen);\n            state.fullscreen = fullscreen;\n            localStorage.setItem('NEOSidekick', JSON.stringify(state));\n        }\n\n        const fullscreenButton = (isOpen, isFullscreen, onClick) => {\n            if (isOpen) {\n                return <IconButton icon={isFullscreen ? \"compress\" : \"expand\"} onClick={onClick} />\n            }\n        }\n        const toggleButton = (isOpen, isFullscreen, onClick) => {\n            if (!isFullscreen) {\n                return <IconButton icon={isOpen ? \"chevron-circle-right\" : \"chevron-circle-left\"} onClick={onClick} />\n            }\n        }\n\n\t\tconst activeContentDimensions = useSelector(selectors.CR.ContentDimensions.active);\n\t\tconst interfaceLanguage = useSelector((state) => state?.user?.preferences?.interfaceLanguage);\n        const iframeSrc = new URL(`${configuration.apiDomain}/chat/`);\n        iframeSrc.searchParams.append('contentLanguage', activeContentDimensions.language ? activeContentDimensions.language[0] : \"\");\n        iframeSrc.searchParams.append('interfaceLanguage', interfaceLanguage);\n        iframeSrc.searchParams.append('userId', configuration.userId);\n        iframeSrc.searchParams.append('plattform', 'neos');\n        iframeSrc.searchParams.append('domain', configuration.domain);\n        iframeSrc.searchParams.append('siteName', configuration.siteName)\n        if (configuration?.referral) {\n            iframeSrc.searchParams.append('referral', configuration?.referral);\n        }\n        if (configuration?.apiKey) {\n            iframeSrc.searchParams.append('apikey', configuration?.apiKey);\n        }\n\n        return <div className={`neosidekick_appWrapper ${isOpen ? \"neosidekick_appWrapper--sidebar-open\" : \"\"}  ${isFullscreen ? \"neosidekick_appWrapper--sidebar-fullscreen\" : \"\"}`}>\n\t\t\t<App {...props} />\n            <div className=\"neosidekick_sideBar\">\n\t\t\t\t<div className=\"neosidekick_sideBar__title\">\n\t\t\t\t\t<Headline className={`neosidekick_sideBar__title-headline ${isOpen ? \"neosidekick_sideBar__title-headline--open\" : \"\"}`}>AI Sidekick</Headline>\n\t\t\t\t\t<div>\n                        {fullscreenButton(isOpen, isFullscreen, () => setFullscreenAndPersistState(!isFullscreen))}\n                        {toggleButton(isOpen, isFullscreen, () => setOpenAndPersistState(!isOpen))}\n                    </div>\n\t\t\t\t</div>\n                <iframe id=\"neosidekickAssistant\" className={`neosidekick_sideBar__frame ${isOpen ? \"neosidekick_sideBar__frame--open\" : \"\"}`} src={iframeSrc.toString()} allow=\"clipboard-write\" onLoad={(e) => e.target.dataset.loaded = true} />\n            </div>\n\t\t</div>\n\t}\n\tcontainerRegistry.set('App', WrappedApp);\n\n    const sendMessageToIframe = (message) => {\n        const checkLoadedStatusAndSendMessage = setInterval(() => {\n            const assistantFrame = document.getElementById('neosidekickAssistant')\n            const isLoaded = assistantFrame.dataset.hasOwnProperty('loaded')\n            if (isLoaded) {\n                console.log('loaded, sending message to frame', message)\n                // @ts-ignore\n                assistantFrame.contentWindow.postMessage(message, '*')\n                clearInterval(checkLoadedStatusAndSendMessage)\n            } else {\n                console.log('not loaded, waiting...')\n                return\n            }\n        }, 250)\n    }\n\n    let requiredChangedEvent = false\n    const watchDocumentNodeChange = function * () {\n        yield takeLatest([actionTypes.UI.ContentCanvas.SET_SRC, actionTypes.UI.ContentCanvas.RELOAD, actionTypes.CR.Nodes.MERGE], function * (action) {\n            if (action.type === actionTypes.UI.ContentCanvas.SET_SRC) {\n                requiredChangedEvent = true;\n            }\n            yield delay(500)\n\n            const nodeTypesRegistry = globalRegistry.get('@neos-project/neos-ui-contentrepository')\n            const state = store.getState();\n\n            const guestFrame = document.getElementsByName('neos-content-main')[0];\n            // @ts-ignore\n            const guestFrameDocument = guestFrame?.contentDocument;\n\n            const previewUrl = state?.ui?.contentCanvas?.previewUrl\n\n            const currentDocumentNode = contentService.getCurrentDocumentNode()\n            const currentDocumentNodePath = currentDocumentNode?.contextPath\n            // @ts-ignore\n            const relevantNodes = Object.values(state?.cr?.nodes?.byContextPath || {}).filter(node => {\n                const documentRole = nodeTypesRegistry.getRole('document');\n                if (!documentRole) {\n                    throw new Error('Document role is not loaded!');\n                }\n                const documentSubNodeTypes = nodeTypesRegistry.getSubTypesOf(documentRole);\n                // only get nodes that are children of the current document node\n                return currentDocumentNodePath &&\n                    node.contextPath.indexOf(currentDocumentNodePath.split('@')[0]) === 0 &&\n                    (node.contextPath === currentDocumentNodePath || !documentSubNodeTypes.includes(node.nodeType))\n            })\n\n            sendMessageToIframe({\n                version: '1.0',\n                eventName: requiredChangedEvent ? 'page-changed' : 'page-updated',\n                data: {\n                    'url': previewUrl,\n                    'title': currentDocumentNode?.properties?.title || guestFrameDocument?.title,\n                    'content': guestFrameDocument?.body?.innerHTML,\n                    'structuredContent': relevantNodes,\n                    'targetAudience': contentService.getCurrentDocumentTargetAudience(),\n                    'pageBriefing': contentService.getCurrentDocumentPageBriefing(),\n                    'focusKeyword': contentService.getCurrentDocumentFocusKeyword()\n                },\n            })\n            requiredChangedEvent = false;\n        });\n    }\n\n    const sagasRegistry = globalRegistry.get('sagas')\n    sagasRegistry.set('NEOSidekick.AiAssistant/watchDocumentNodeChange', {saga: watchDocumentNodeChange})\n\n    const editorsRegistry = globalRegistry.get('inspector').get('editors');\n    editorsRegistry.set('NEOSidekick.AiAssistant/Inspector/Editors/MagicTextFieldEditor', {\n        component: MagicTextFieldEditor\n    });\n    editorsRegistry.set('NEOSidekick.AiAssistant/Inspector/Editors/MagicTextAreaEditor', {\n        component: MagicTextAreaEditor\n    });\n});\n", "import React, {PureComponent} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {neos} from '@neos-project/neos-ui-decorators';\nimport {TextInput, Icon, Button} from '@neos-project/react-ui-components';\nimport { actions, selectors } from '@neos-project/neos-ui-redux-store';\n\nconst defaultOptions = {\n    autoFocus: false,\n    disabled: false,\n    maxlength: null,\n    readonly: false\n};\n\n@neos(globalRegistry => ({\n    i18nRegistry: globalRegistry.get('i18n'),\n    externalService: globalRegistry.get('NEOSidekick.AiAssistant').get('externalService'),\n    contentService: globalRegistry.get('NEOSidekick.AiAssistant').get('contentService')\n}))\n@connect(state => ({\n    activeContentDimensions: selectors.CR.ContentDimensions.active(state)\n}), {\n    addFlashMessage: actions.UI.FlashMessages.add\n})\nexport default class MagicTextFieldEditor extends PureComponent {\n    constructor(props) {\n        super(props);\n    }\n\n    static propTypes = {\n        className: PropTypes.string,\n        value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        commit: PropTypes.func.isRequired,\n        options: PropTypes.object,\n        onKeyPress: PropTypes.func,\n        onEnterKey: PropTypes.func,\n        id: PropTypes.string,\n\n        activeContentDimensions: PropTypes.object.isRequired,\n\n        i18nRegistry: PropTypes.object.isRequired,\n        externalService: PropTypes.object.isRequired,\n        contentService: PropTypes.object.isRequired,\n        addFlashMessage: PropTypes.func.isRequired\n    };\n\n    static defaultProps = {\n        options: {}\n    };\n\n    state = {\n        loading: false\n    }\n\n    getIcon = (loading) => {\n        if (loading) {\n            return <Icon icon=\"spinner\" size=\"\" fixedWidth padded=\"right\" spin={true} />\n        } else {\n            return <Icon icon=\"magic\" size=\"\" fixedWidth padded=\"right\" />\n        }\n    }\n\n    fetch = async (module) => {\n        const {\n            commit,\n            externalService,\n            contentService,\n            activeContentDimensions,\n            addFlashMessage,\n            i18nRegistry\n        } = this.props;\n        this.setState({loading: true});\n        const title = contentService.getCurrentDocumentNode()?.properties?.title\n        const content = contentService.getGuestFrameDocumentHtml()\n        try {\n            const metaDescription = await externalService.generate(module, activeContentDimensions.language ? activeContentDimensions.language[0] : \"\", title, content)\n            commit(metaDescription)\n        } catch (e) {\n            console.error(e)\n            addFlashMessage('NEOSidekick.AiAssistant', i18nRegistry.translate('NEOSidekick.AiAssistant:Main:failedToGenerate'), 'ERROR')\n        }\n        this.setState({loading: false});\n    }\n\n    render () {\n        const {\n            id,\n            value,\n            className,\n            commit,\n            options,\n            i18nRegistry,\n            onKeyPress,\n            onEnterKey\n        } = this.props;\n\n        const finalOptions = Object.assign({}, defaultOptions, options);\n        // Placeholder text must be unescaped in case html entities were used\n        const placeholder = options && options.placeholder && i18nRegistry.translate(unescape(options.placeholder));\n        const showGenerateButton = !(\n            finalOptions.readonly || finalOptions.disabled\n        );\n\n        return (\n            <div style={{display: 'flex', flexDirection: 'column'}} className={className}>\n                <div>\n                    <TextInput\n                        id={id}\n                        value={value}\n                        onChange={commit}\n                        disabled={finalOptions.disabled || this.state.loading}\n                        maxLength={finalOptions.maxlength}\n                        readOnly={finalOptions.readonly}\n                        placeholder={placeholder}\n                        onKeyPress={onKeyPress}\n                        onEnterKey={onEnterKey}\n                    />\n                </div>\n                {showGenerateButton ? (\n                    <div>\n                        <Button\n                            className=\"generateBtn\"\n                            size=\"regular\"\n                            icon={this.state.loading ? 'hourglass' : 'magic'}\n                            style=\"neutral\"\n                            hoverStyle=\"clean\"\n                            disabled={this.state.loading}\n                            onClick={async () => await this.fetch(finalOptions.module)}\n                        >\n                            {i18nRegistry.translate('NEOSidekick.AiAssistant:Main:generate')}&nbsp;\n                            {this.getIcon(this.state.loading)}\n                        </Button>\n                    </div>\n                ) : null}\n            </div>\n        );\n    }\n}\n", "import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {neos} from '@neos-project/neos-ui-decorators';\nimport {TextArea, Icon, Button} from '@neos-project/react-ui-components';\nimport { actions, selectors } from '@neos-project/neos-ui-redux-store';\n\nconst defaultOptions = {\n    autoFocus: false,\n    disabled: false,\n    maxlength: null,\n    readonly: false\n};\n\n@neos(globalRegistry => ({\n    i18nRegistry: globalRegistry.get('i18n'),\n    externalService: globalRegistry.get('NEOSidekick.AiAssistant').get('externalService'),\n    contentService: globalRegistry.get('NEOSidekick.AiAssistant').get('contentService')\n}))\n@connect(state => ({\n    activeContentDimensions: selectors.CR.ContentDimensions.active(state)\n}), {\n    addFlashMessage: actions.UI.FlashMessages.add\n})\nexport default class MagicTextAreaEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {loading: false}\n    }\n    static propTypes = {\n        className: PropTypes.string,\n        value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        commit: PropTypes.func.isRequired,\n        options: PropTypes.object,\n        onKeyPress: PropTypes.func,\n        onEnterKey: PropTypes.func,\n        id: PropTypes.string,\n\n        activeContentDimensions: PropTypes.object.isRequired,\n\n        i18nRegistry: PropTypes.object.isRequired,\n        externalService: PropTypes.object.isRequired,\n        contentService: PropTypes.object.isRequired,\n        addFlashMessage: PropTypes.func.isRequired\n    };\n\n    static defaultProps = {\n        options: {}\n    };\n\n    getIcon = (loading) => {\n        if (loading) {\n            return <Icon icon=\"spinner\" size=\"\" fixedWidth padded=\"right\" spin={true} />\n        } else {\n            return <Icon icon=\"magic\" size=\"\" fixedWidth padded=\"right\" />\n        }\n    }\n\n    fetch = async (module) => {\n        const {\n            commit,\n            externalService,\n            contentService,\n            activeContentDimensions,\n            addFlashMessage,\n            i18nRegistry\n        } = this.props;\n        this.setState({loading: true});\n        const title = contentService.getCurrentDocumentNode()?.properties?.title\n        const content = contentService.getGuestFrameDocumentHtml()\n        try {\n            const metaDescription = await externalService.generate(module, activeContentDimensions.language ? activeContentDimensions.language[0] : \"\", title, content)\n            commit(metaDescription)\n        } catch (e) {\n            console.error(e)\n            addFlashMessage('NEOSidekick.AiAssistant', i18nRegistry.translate('NEOSidekick.AiAssistant:Main:failedToGenerate'), 'ERROR')\n        }\n        this.setState({loading: false});\n    }\n\n    render () {\n        const {\n            id,\n            value,\n            className,\n            commit,\n            options,\n            i18nRegistry,\n            onKeyPress,\n            onEnterKey\n        } = this.props;\n\n        const finalOptions = Object.assign({}, defaultOptions, options);\n        // Placeholder text must be unescaped in case html entities were used\n        const placeholder = options && options.placeholder && i18nRegistry.translate(unescape(options.placeholder));\n        const showGenerateButton = !(\n            finalOptions.readonly || finalOptions.disabled\n        );\n\n        return (\n            <div style={{display: 'flex', flexDirection: 'column'}} className={className}>\n                <div>\n                    <TextArea\n                        id={id}\n                        value={value}\n                        onChange={commit}\n                        disabled={finalOptions.disabled || this.state.loading}\n                        maxLength={finalOptions.maxlength}\n                        readOnly={finalOptions.readonly}\n                        placeholder={placeholder}\n                        minRows={finalOptions.minRows}\n                        expandedRows={finalOptions.expandedRows}\n                        onKeyPress={onKeyPress}\n                        onEnterKey={onEnterKey}\n                    />\n                </div>\n                {showGenerateButton ? (\n                    <div>\n                        <Button\n                            className=\"generateBtn\"\n                            size=\"regular\"\n                            icon={this.state.loading ? 'hourglass' : 'magic'}\n                            style=\"neutral\"\n                            hoverStyle=\"clean\"\n                            disabled={this.state.loading}\n                            onClick={async () => await this.fetch(finalOptions.module)}\n                        >\n                            {i18nRegistry.translate('NEOSidekick.AiAssistant:Main:generate')}&nbsp;\n                            {this.getIcon(this.state.loading)}\n                        </Button>\n                    </div>\n                ) : null}\n            </div>\n        );\n    }\n}\n", "export const createExternalService = (frontendConfiguration): ExternalService => {\n    const configuration = frontendConfiguration['NEOSidekick.AiAssistant'];\n    return new ExternalService(configuration['apiDomain'], configuration['apiKey'])\n}\n\nclass ExternalService {\n    private readonly apiDomain: string = ''\n    private readonly apiKey: string = ''\n\n    constructor(apiDomain: string, apiKey: string) {\n        this.apiDomain = apiDomain\n        this.apiKey = apiKey\n    }\n\n    generate = async (module, language, title, content) => {\n        const response = await fetch(`${this.apiDomain}/api/v1/chat?language=${language}`, {\n            method: \"POST\", // or 'PUT'\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${this.apiKey}`,\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                module: \"meta_description\",\n                platform: \"neos\",\n                user_input: [\n                    {\"identifier\": \"title\", \"value\": title},\n                    {\"identifier\": \"content\", \"value\": content},\n                ]\n            })\n        });\n\n        const jsonData = await response.json()\n        return jsonData?.data?.message?.message\n    }\n}\n", "import {SynchronousMetaRegistry} from \"@neos-project/neos-ui-extensibility\";\nimport {Node, NodeType} from '@neos-project/neos-ts-interfaces';\nimport {Store} from 'react-redux'\n\nexport const createContentService = (globalRegistry: SynchronousMetaRegistry<any>, store: Store): ContentService => {\n    return new ContentService(globalRegistry, store)\n}\n\nclass ContentService {\n    private globalRegistry: SynchronousMetaRegistry<any>;\n    private store: Store;\n    constructor(globalRegistry: SynchronousMetaRegistry<any>, store: Store) {\n        this.globalRegistry = globalRegistry\n        this.store = store\n    }\n\n    getGuestFrameDocumentHtml = (): string => {\n        const guestFrame = document.getElementsByName('neos-content-main')[0];\n        // @ts-ignore\n        const guestFrameDocument = guestFrame?.contentDocument;\n        return guestFrameDocument?.body?.innerHTML;\n    }\n\n    getCurrentDocumentNode = (): Node => {\n        const state = this.store.getState()\n        const currentDocumentNodePath = state?.cr?.nodes?.documentNode\n        return state?.cr?.nodes?.byContextPath[currentDocumentNodePath]\n    }\n\n    getCurrentDocumentNodeType = (): NodeType => {\n        const currentDocumentNode = this.getCurrentDocumentNode()\n        return this.globalRegistry.get('@neos-project/neos-ui-contentrepository').get(currentDocumentNode?.nodeType)\n    }\n\n    getCurrentDocumentTargetAudience = (): string => {\n        const node = this.getCurrentDocumentNode()\n        const targetAudience = this.getCurrentDocumentNodeType()?.options?.sidekick?.targetAudience\n\n        if (targetAudience) {\n            return this.processClientEval(targetAudience, node, node)\n        }\n\n        return null\n    }\n\n    getCurrentDocumentPageBriefing = (): string => {\n        const node = this.getCurrentDocumentNode()\n        const pageBriefing = this.getCurrentDocumentNodeType()?.options?.sidekick?.pageBriefing\n\n        if (pageBriefing) {\n            return this.processClientEval(pageBriefing, node, node)\n        }\n\n        return null\n    }\n\n    getCurrentDocumentFocusKeyword = (): string => {\n        const node = this.getCurrentDocumentNode()\n        const focusKeyword = this.getCurrentDocumentNodeType()?.options?.sidekick?.focusKeyword\n\n        if (focusKeyword) {\n            return this.processClientEval(focusKeyword, node, node)\n        }\n\n        return null\n    }\n\n    private processClientEval = (value: string, node: Node, parentNode: Node): string => {\n        if (typeof value === 'string' && value.startsWith('ClientEval:')) {\n            try {\n                // eslint-disable-next-line no-new-func\n                const evaluateFn = new Function('node,parentNode', 'return ' + value.replace('ClientEval:', ''));\n                return evaluateFn(node, parentNode)\n            } catch (e) {\n                console.warn('An error occurred while trying to evaluate \"' + value + '\"\\n', e);\n            }\n        }\n\n        return value;\n    }\n}\n"],
  "mappings": "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",
  "names": ["readFromConsumerApi", "key", "args", "init_readFromConsumerApi", "__esmMin", "require_react_ui_components", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_neos_ui_redux_store", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_react", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_react_redux", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_effects", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_prop_types", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_neos_ui_decorators", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "init_readFromConsumerApi", "AbstractRegistry", "description", "positionalArraySorter", "subject", "position", "idKey", "positionAccessor", "value", "indexMapping", "middleKeys", "startKeys", "endKeys", "beforeKeys", "afterKeys", "item", "index", "key", "positionValue", "invalid", "weightMatch", "weight", "match", "reference", "numberPosition", "resultStart", "resultMiddle", "resultEnd", "processedKeys", "sortedWeights", "dict", "asc", "weights", "x", "a", "b", "addToResults", "keys", "result", "beforeWeights", "i", "afterWeights", "positionalArraySorter_default", "SynchronousRegistry", "AbstractRegistry", "description", "key", "value", "position", "entry", "indexOfItemWithTheSameKey", "item", "result", "searchKey", "unsortedChildren", "positionalArraySorter_default", "dist_default", "readFromConsumerApi", "import_react_ui_components", "import_neos_ui_redux_store", "import_react", "import_react_redux", "import_effects", "import_react", "import_react_redux", "import_prop_types", "import_neos_ui_decorators", "import_react_ui_components", "import_neos_ui_redux_store", "defaultOptions", "MagicTextFieldEditor", "props", "loading", "React", "module", "commit", "externalService", "contentService", "activeContentDimensions", "addFlashMessage", "i18nRegistry", "title", "content", "metaDescription", "e", "id", "value", "className", "options", "onKeyPress", "onEnterKey", "finalOptions", "placeholder", "showGenerateButton", "PropTypes", "__decorateClass", "globalRegistry", "state", "import_react", "import_react_redux", "import_prop_types", "import_neos_ui_decorators", "import_react_ui_components", "import_neos_ui_redux_store", "defaultOptions", "MagicTextAreaEditor", "props", "loading", "React", "module", "commit", "externalService", "contentService", "activeContentDimensions", "addFlashMessage", "i18nRegistry", "title", "content", "metaDescription", "e", "id", "value", "className", "options", "onKeyPress", "onEnterKey", "finalOptions", "placeholder", "showGenerateButton", "PropTypes", "__decorateClass", "globalRegistry", "state", "createExternalService", "frontendConfiguration", "configuration", "ExternalService", "apiDomain", "apiKey", "module", "language", "title", "content", "createContentService", "globalRegistry", "store", "ContentService", "state", "currentDocumentNodePath", "currentDocumentNode", "node", "targetAudience", "pageBriefing", "focusKeyword", "value", "parentNode", "e", "delay", "timeInMilliseconds", "resolve", "dist_default", "globalRegistry", "store", "frontendConfiguration", "configuration", "SynchronousRegistry", "externalService", "createExternalService", "contentService", "createContentService", "containerRegistry", "App", "WrappedApp", "props", "state", "isOpen", "setOpen", "React", "setOpenAndPersistState", "open", "isFullscreen", "setFullscreen", "setFullscreenAndPersistState", "fullscreen", "fullscreenButton", "onClick", "toggleButton", "activeContentDimensions", "interfaceLanguage", "iframeSrc", "e", "sendMessageToIframe", "message", "checkLoadedStatusAndSendMessage", "assistantFrame", "requiredChangedEvent", "watchDocumentNodeChange", "action", "nodeTypesRegistry", "guestFrameDocument", "previewUrl", "currentDocumentNode", "currentDocumentNodePath", "relevantNodes", "node", "documentRole", "documentSubNodeTypes", "editorsRegistry", "MagicTextFieldEditor", "MagicTextAreaEditor"]
}
