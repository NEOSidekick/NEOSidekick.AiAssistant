{
  "version": 3,
  "sources": ["../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/readFromConsumerApi.ts", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/react-ui-components/index.js", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-redux-store/index.js", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/react/index.js", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/react-redux/index.js", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/redux-saga/effects/index.js", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/index.ts", "../../Private/NeosUserInterface/src/manifest.tsx"],
  "sourcesContent": ["export default function readFromConsumerApi(key: string): (...args: any[]) => any {\n    return (...args: any[]) => {\n        if ((window as any)['@Neos:HostPluginAPI'] && (window as any)['@Neos:HostPluginAPI'][`@${key}`]) {\n            return (window as any)['@Neos:HostPluginAPI'][`@${key}`](...args);\n        }\n\n        throw new Error('You are trying to read from a consumer api that hasn\\'t been initialized yet!');\n    };\n}\n", "import readFromConsumerApi from '../../../readFromConsumerApi';\n\nmodule.exports = readFromConsumerApi('NeosProjectPackages')().ReactUiComponents;\n", "import readFromConsumerApi from '../../../readFromConsumerApi';\n\nmodule.exports = readFromConsumerApi('NeosProjectPackages')().NeosUiReduxStore;\n", "import readFromConsumerApi from '../../../readFromConsumerApi';\n\nmodule.exports = readFromConsumerApi('vendor')().React;\n", "import readFromConsumerApi from '../../../readFromConsumerApi';\n\nmodule.exports = readFromConsumerApi('vendor')().reactRedux;\n", "import readFromConsumerApi from '../../../../readFromConsumerApi';\n\nmodule.exports = readFromConsumerApi('vendor')().reduxSagaEffects;\n", "import createConsumerApi from './createConsumerApi';\nimport readFromConsumerApi from './readFromConsumerApi';\nimport {\n    SynchronousRegistry,\n    SynchronousMetaRegistry\n} from './registry/index';\n\nexport default readFromConsumerApi('manifest');\n\nexport {\n    createConsumerApi,\n    readFromConsumerApi,\n    SynchronousRegistry,\n    SynchronousMetaRegistry\n};\n", "// @ts-ignore\nimport manifest from \"@neos-project/neos-ui-extensibility\";\n// @ts-ignore\nimport { IconButton, Headline } from \"@neos-project/react-ui-components\";\n// @ts-ignore\nimport { actionTypes, selectors } from '@neos-project/neos-ui-redux-store';\n// @ts-ignore\nimport * as React from 'react';\n// @ts-ignore\nimport { useSelector } from 'react-redux';\n// @ts-ignore\nimport { takeLatest } from 'redux-saga/effects';\nimport \"./style.css\";\n\nexport default function delay(timeInMilliseconds: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, timeInMilliseconds));\n}\n\nmanifest(\"NEOSidekick.AiAssistant\", {}, (globalRegistry, context) => {\n    let configuration = null;\n    // Call the configuration endpoint to get the plugin configuration\n    // and to check whether the user has permission to use AiAsisstant\n    // If not, the endpoint will return a 403 status\n    const pingRequest = new XMLHttpRequest();\n    pingRequest.open('GET', '/neosidekick/aiassistant/configuration', false);\n    pingRequest.withCredentials = true;\n    pingRequest.addEventListener('load', (event) => {\n        const response = event.target;\n        // @ts-ignore\n        if (response?.status >= 200 && response?.status <= 299) {\n            // @ts-ignore\n            configuration = JSON.parse(response.responseText)\n        }\n    })\n    pingRequest.send();\n\n    if (configuration === null) {\n        return\n    }\n\n    const containerRegistry = globalRegistry.get('containers');\n    const App = containerRegistry.get('App');\n\tconst WrappedApp = (props: Record<string, unknown>) => {\n        const state = localStorage.getItem('NEOSidekick') ? JSON.parse(localStorage.getItem('NEOSidekick')) : { open: true, fullscreen: false };\n\t\tconst [isOpen, setOpen] = React.useState(state?.open);\n        const setOpenAndPersistState = (open) => {\n            setOpen(open);\n            state.open = open;\n            localStorage.setItem('NEOSidekick', JSON.stringify(state));\n        }\n\n        const [isFullscreen, setFullscreen] = React.useState(state?.fullscreen);\n        const setFullscreenAndPersistState = (fullscreen) => {\n            setFullscreen(fullscreen);\n            state.fullscreen = fullscreen;\n            localStorage.setItem('NEOSidekick', JSON.stringify(state));\n        }\n\n        const fullscreenButton = (isOpen, isFullscreen, onClick) => {\n            if (isOpen) {\n                return <IconButton icon={isFullscreen ? \"compress\" : \"expand\"} onClick={onClick} />\n            }\n        }\n        const toggleButton = (isOpen, isFullscreen, onClick) => {\n            if (!isFullscreen) {\n                return <IconButton icon={isOpen ? \"chevron-circle-right\" : \"chevron-circle-left\"} onClick={onClick} />\n            }\n        }\n\n\t\tconst activeContentDimensions = useSelector(selectors.CR.ContentDimensions.active);\n\t\tconst interfaceLanguage = useSelector((state) => state?.user?.preferences?.interfaceLanguage);\n        const iframeSrc = new URL('https://api.neosidekick.com/chat/');\n        iframeSrc.searchParams.append('contentLanguage', activeContentDimensions.language ? activeContentDimensions.language[0] : \"\");\n        iframeSrc.searchParams.append('interfaceLanguage', interfaceLanguage);\n        iframeSrc.searchParams.append('userId', configuration.userId);\n        iframeSrc.searchParams.append('plattform', 'neos');\n        iframeSrc.searchParams.append('domain', configuration.domain);\n        iframeSrc.searchParams.append('siteName', configuration.siteName)\n        if (configuration?.referral) {\n            iframeSrc.searchParams.append('referral', configuration?.referral);\n        }\n        if (configuration?.apikey) {\n            iframeSrc.searchParams.append('apikey', configuration?.apikey);\n        }\n\n        return <div className={`neosidekick_appWrapper ${isOpen ? \"neosidekick_appWrapper--sidebar-open\" : \"\"}  ${isFullscreen ? \"neosidekick_appWrapper--sidebar-fullscreen\" : \"\"}`}>\n\t\t\t<App {...props} />\n            <div className=\"neosidekick_sideBar\">\n\t\t\t\t<div className=\"neosidekick_sideBar__title\">\n\t\t\t\t\t<Headline className={`neosidekick_sideBar__title-headline ${isOpen ? \"neosidekick_sideBar__title-headline--open\" : \"\"}`}>AI Sidekick</Headline>\n\t\t\t\t\t<div>\n                        {fullscreenButton(isOpen, isFullscreen, () => setFullscreenAndPersistState(!isFullscreen))}\n                        {toggleButton(isOpen, isFullscreen, () => setOpenAndPersistState(!isOpen))}\n                    </div>\n\t\t\t\t</div>\n                <iframe id=\"neosidekickAssistant\" className={`neosidekick_sideBar__frame ${isOpen ? \"neosidekick_sideBar__frame--open\" : \"\"}`} src={iframeSrc.toString()} allow=\"clipboard-write\" onLoad={(e) => e.target.dataset.loaded = true} />\n            </div>\n\t\t</div>\n\t}\n\tcontainerRegistry.set('App', WrappedApp);\n\n    const sendMessageToIframe = (message) => {\n        const checkLoadedStatusAndSendMessage = setInterval(() => {\n            const assistantFrame = document.getElementById('neosidekickAssistant')\n            const isLoaded = assistantFrame.dataset.hasOwnProperty('loaded')\n            if (isLoaded) {\n                console.log('loaded, sending message to frame', message)\n                assistantFrame.contentWindow.postMessage(message, '*')\n                clearInterval(checkLoadedStatusAndSendMessage)\n            } else {\n                console.log('not loaded, waiting...')\n                return\n            }\n        }, 250)\n    }\n\n    let requiredChangedEvent = false\n    const watchDocumentNodeChange = function * () {\n        yield takeLatest([actionTypes.UI.ContentCanvas.SET_SRC, actionTypes.UI.ContentCanvas.RELOAD, actionTypes.CR.Nodes.MERGE], function * (action) {\n            if (action.type === actionTypes.UI.ContentCanvas.SET_SRC) {\n                requiredChangedEvent = true;\n            }\n            yield delay(500)\n\n            const nodeTypesRegistry = globalRegistry.get('@neos-project/neos-ui-contentrepository')\n            const state = context.store.getState();\n\n            const guestFrame = document.getElementsByName('neos-content-main')[0];\n            const guestFrameDocument = guestFrame?.contentDocument;\n\n            const previewUrl = state?.ui?.contentCanvas?.previewUrl\n\n            const currentDocumentNodePath = state?.cr?.nodes?.documentNode\n            const relevantNodes = Object.values(state?.cr?.nodes?.byContextPath || {}).filter(node => {\n                const documentRole = nodeTypesRegistry.getRole('document');\n                if (!documentRole) {\n                    throw new Error('Document role is not loaded!');\n                }\n                const documentSubNodeTypes = nodeTypesRegistry.getSubTypesOf(documentRole);\n                // only get nodes that are children of the current document node\n                return currentDocumentNodePath &&\n                    node.contextPath.indexOf(currentDocumentNodePath.split('@')[0]) === 0 &&\n                    (node.contextPath === currentDocumentNodePath || !documentSubNodeTypes.includes(node.nodeType))\n            })\n\n            sendMessageToIframe({\n                version: '1.0',\n                eventName: requiredChangedEvent ? 'page-changed' : 'page-updated',\n                data: {\n                    'url': previewUrl,\n                    'title': state?.cr?.nodes?.byContextPath[currentDocumentNodePath]?.properties?.title || guestFrameDocument?.title,\n                    'content': guestFrameDocument?.body?.innerHTML,\n                    'structuredContent': relevantNodes\n                },\n            })\n            requiredChangedEvent = false;\n        });\n    }\n\n    const sagasRegistry = globalRegistry.get('sagas')\n    sagasRegistry.set('NEOSidekick.AiAssistant/debug', {saga: watchDocumentNodeChange})\n});\n"],
  "mappings": "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",
  "names": ["readFromConsumerApi", "key", "args", "init_readFromConsumerApi", "__esmMin", "require_react_ui_components", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_neos_ui_redux_store", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_react", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_react_redux", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_effects", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "init_readFromConsumerApi", "dist_default", "readFromConsumerApi", "import_react_ui_components", "import_neos_ui_redux_store", "React", "import_react_redux", "import_effects", "delay", "timeInMilliseconds", "resolve", "dist_default", "globalRegistry", "context", "configuration", "pingRequest", "event", "response", "containerRegistry", "App", "WrappedApp", "props", "state", "isOpen", "setOpen", "setOpenAndPersistState", "open", "isFullscreen", "setFullscreen", "setFullscreenAndPersistState", "fullscreen", "fullscreenButton", "onClick", "toggleButton", "activeContentDimensions", "interfaceLanguage", "iframeSrc", "e", "sendMessageToIframe", "message", "checkLoadedStatusAndSendMessage", "assistantFrame", "requiredChangedEvent", "watchDocumentNodeChange", "action", "nodeTypesRegistry", "guestFrameDocument", "previewUrl", "currentDocumentNodePath", "relevantNodes", "node", "documentRole", "documentSubNodeTypes"]
}
