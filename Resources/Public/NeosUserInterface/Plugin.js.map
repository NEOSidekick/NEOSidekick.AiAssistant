{
  "version": 3,
  "sources": ["../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/readFromConsumerApi.ts", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/react-ui-components/index.js", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-redux-store/index.js", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/react/index.js", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/react-redux/index.js", "../../Private/NeosUserInterface/node_modules/@neos-project/neos-ui-extensibility/src/index.ts", "../../Private/NeosUserInterface/src/manifest.tsx"],
  "sourcesContent": ["export default function readFromConsumerApi(key: string): (...args: any[]) => any {\n    return (...args: any[]) => {\n        if ((window as any)['@Neos:HostPluginAPI'] && (window as any)['@Neos:HostPluginAPI'][`@${key}`]) {\n            return (window as any)['@Neos:HostPluginAPI'][`@${key}`](...args);\n        }\n\n        throw new Error('You are trying to read from a consumer api that hasn\\'t been initialized yet!');\n    };\n}\n", "import readFromConsumerApi from '../../../readFromConsumerApi';\n\nmodule.exports = readFromConsumerApi('NeosProjectPackages')().ReactUiComponents;\n", "import readFromConsumerApi from '../../../readFromConsumerApi';\n\nmodule.exports = readFromConsumerApi('NeosProjectPackages')().NeosUiReduxStore;\n", "import readFromConsumerApi from '../../../readFromConsumerApi';\n\nmodule.exports = readFromConsumerApi('vendor')().React;\n", "import readFromConsumerApi from '../../../readFromConsumerApi';\n\nmodule.exports = readFromConsumerApi('vendor')().reactRedux;\n", "import createConsumerApi from './createConsumerApi';\nimport readFromConsumerApi from './readFromConsumerApi';\nimport {\n    SynchronousRegistry,\n    SynchronousMetaRegistry\n} from './registry/index';\n\nexport default readFromConsumerApi('manifest');\n\nexport {\n    createConsumerApi,\n    readFromConsumerApi,\n    SynchronousRegistry,\n    SynchronousMetaRegistry\n};\n", "// @ts-ignore\nimport manifest from \"@neos-project/neos-ui-extensibility\";\n// @ts-ignore\nimport { IconButton, Headline } from \"@neos-project/react-ui-components\";\n// @ts-ignore\nimport {selectors} from '@neos-project/neos-ui-redux-store';\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport \"./style.css\";\n\nmanifest(\"CodeQ.WritingAssistant\", {}, (globalRegistry, { store, frontendConfiguration }) => {\n\tconst containerRegistry = globalRegistry.get('containers');\n\tconst App = containerRegistry.get('App');\n\n\tconst WrappedApp = (props: Record<string, unknown>) => {\n\t\tconst [isOpen, setOpen] = React.useState(true);\n\n\t\tconst activeContentDimensions = useSelector(selectors.CR.ContentDimensions.active);\n\t\tconst interfaceLanguage = useSelector((state) => state?.user?.preferences?.interfaceLanguage);\n\n        return <div className={`codeQ_appWrapper ${isOpen ? \"codeQ_appWrapper--sidebar-open\" : \"\"}`}>\n\t\t\t<App {...props} />\n            <div className=\"codeQ_sideBar\">\n\t\t\t\t<div className=\"codeQ_sideBar__title\">\n\t\t\t\t\t<Headline className={`codeQ_sideBar__title-headline ${isOpen ? \"codeQ_sideBar__title-headline--open\" : \"\"}`}>AI Sidekick</Headline>\n\t\t\t\t\t<IconButton icon={isOpen ? \"chevron-circle-right\" : \"chevron-circle-left\"} onClick={() => setOpen(!isOpen)} />\n\t\t\t\t</div>\n                <iframe className={`codeQ_sideBar__frame ${isOpen ? \"codeQ_sideBar__frame--open\" : \"\"}`} src={\"https://docs.codeq.at/chat/?contentLanguage=\" + (activeContentDimensions.language ? activeContentDimensions.language[0] : \"\") + \"&interfaceLanguage=\" + interfaceLanguage} />\n            </div>\n\t\t</div>\n\t}\n\tcontainerRegistry.set('App', WrappedApp);\n});\n"],
  "mappings": "kjBAAc,SAAPA,EAAqCC,EAAW,CACnD,MAAO,IAAIC,IAAe,CACtB,GAAK,OAAe,qBAAqB,GAAM,OAAe,qBAAqB,EAAE,IAAID,GAAK,EAC1F,OAAQ,OAAe,qBAAqB,EAAE,IAAIA,GAAK,EAAE,GAAGC,CAAI,EAGpE,MAAM,IAAI,MAAM,8EAA+E,CACnG,CACJ,CARA,IAAAC,EAAAC,EAAA,QCAA,IAAAC,EAAAC,EAAA,CAAAC,GAAAC,IAAA,CAAAC,IAEAD,EAAO,QAAUE,EAAoB,qBAAqB,EAAC,EAAG,oBCF9D,IAAAC,EAAAC,EAAA,CAAAC,GAAAC,IAAA,CAAAC,IAEAD,EAAO,QAAUE,EAAoB,qBAAqB,EAAC,EAAG,mBCF9D,IAAAC,EAAAC,EAAA,CAAAC,GAAAC,IAAA,CAAAC,IAEAD,EAAO,QAAUE,EAAoB,QAAQ,EAAC,EAAG,QCFjD,IAAAC,EAAAC,EAAA,CAAAC,GAAAC,IAAA,CAAAC,IAEAD,EAAO,QAAUE,EAAoB,QAAQ,EAAC,EAAG,aCDjDC,IAMA,IAAAC,EAAeC,EAAoB,UAAU,ECJ7C,IAAAC,EAAqC,OAErCC,EAAwB,OACxBC,EAAuB,OACvBC,EAA4B,OAG5BC,EAAS,yBAA0B,CAAC,EAAG,CAACC,EAAgB,CAAE,MAAAC,EAAO,sBAAAC,CAAsB,IAAM,CAC5F,IAAMC,EAAoBH,EAAe,IAAI,YAAY,EACnDI,EAAMD,EAAkB,IAAI,KAAK,EAEjCE,EAAcC,GAAmC,CACtD,GAAM,CAACC,EAAQC,CAAO,EAAU,WAAS,EAAI,EAEvCC,KAA0B,eAAY,YAAU,GAAG,kBAAkB,MAAM,EAC3EC,KAAoB,eAAaC,GAAUA,GAAO,MAAM,aAAa,iBAAiB,EAEtF,OAAO,gBAAC,OAAI,UAAW,oBAAoBJ,EAAS,iCAAmC,MAC5F,gBAACH,EAAA,CAAK,GAAGE,EAAO,EACP,gBAAC,OAAI,UAAU,iBACvB,gBAAC,OAAI,UAAU,wBACd,gBAAC,YAAS,UAAW,iCAAiCC,EAAS,sCAAwC,MAAM,aAAW,EACxH,gBAAC,cAAW,KAAMA,EAAS,uBAAyB,sBAAuB,QAAS,IAAMC,EAAQ,CAACD,CAAM,EAAG,CAC7G,EACY,gBAAC,UAAO,UAAW,wBAAwBA,EAAS,6BAA+B,KAAM,IAAK,gDAAkDE,EAAwB,SAAWA,EAAwB,SAAS,CAAC,EAAI,IAAM,sBAAwBC,EAAmB,CAC9Q,CACV,CACD,EACAP,EAAkB,IAAI,MAAOE,CAAU,CACxC,CAAC",
  "names": ["readFromConsumerApi", "key", "args", "init_readFromConsumerApi", "__esmMin", "require_react_ui_components", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_neos_ui_redux_store", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_react", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_react_redux", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "init_readFromConsumerApi", "dist_default", "readFromConsumerApi", "import_react_ui_components", "import_neos_ui_redux_store", "React", "import_react_redux", "dist_default", "globalRegistry", "store", "frontendConfiguration", "containerRegistry", "App", "WrappedApp", "props", "isOpen", "setOpen", "activeContentDimensions", "interfaceLanguage", "state"]
}
