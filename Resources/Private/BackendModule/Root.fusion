include: resource://Neos.Fusion/Private/Fusion/Root.fusion
include: resource://Neos.Neos.Ui/Private/Fusion/Prototypes/RenderConfiguration.fusion
include: resource://Sitegeist.FusionLinkPrototypes/Private/Fusion/Root.fusion
include: ./BackendModule.fusion

NEOSidekick.AiAssistant.BackendModule.ImageAlternativeTextController.index = NEOSidekick.AiAssistant:BackendModule {
    getAction = 'findAssets'
    updateAction = 'updateAssets'
    moduleConfiguration = Neos.Fusion:Value {
        defaults = Neos.Fusion:DataStructure {
            itemType = 'Asset'
            onlyAssetsInUse = false
            propertyName = 'title'
            itemsPerPage = 10
            language = ${Configuration.setting('NEOSidekick.AiAssistant.defaultLanguage')}
        }
        config = ${Array.filter(Configuration.setting('NEOSidekick.AiAssistant.altTextGeneratorModule'), (value, key) => value != null)}
        enforceConfigs = ${Array.keys(Array.filter(this.config, (value, key) => key != 'itemsPerPage'))}
        editableProperties = ${this.config.propertyName ? [this.config.propertyName] : ['title']}
        value = ${Array.concat(this.defaults, this.config, {enforceConfigs: this.enforceConfigs}, {editableProperties: this.editableProperties})}
    }
}

NEOSidekick.AiAssistant.BackendModule.FocusKeywordController.index = NEOSidekick.AiAssistant:BackendModule {
    getAction = 'getFocusKeywordNodes'
    updateAction = 'updateFocusKeywordNodes'
    moduleConfiguration = Neos.Fusion:Value {
        defaults = Neos.Fusion:DataStructure {
            itemType = 'DocumentNode'
            workspace = 'live'
            mode = 'both'
            nodeTypeFilter = null
            baseNodeTypeFilter = 'NEOSidekick.AiAssistant:Mixin.AiPageBriefing'
            itemsPerPage = 10
            editableProperties = ${['focusKeyword']}
        }
        config = ${Array.filter(Configuration.setting('NEOSidekick.AiAssistant.focusKeywordGeneratorModule'), (value, key) => value != null)}
        enforceConfigs = ${Array.keys(Array.filter(this.config, (value, key) => key != 'itemsPerPage'))}
        value = ${Array.concat(this.defaults, this.config, {enforceConfigs: this.enforceConfigs})}
    }
}

NEOSidekick.AiAssistant.ConfigurationModuleController.index = Neos.Fusion:Component {
NEOSidekick.AiAssistant.BackendModule.ConfigurationController.index = Neos.Fusion:Component {
    apiDomain = ${developmentBuild ? 'https://api-staging.neosidekick.com' : 'https://api.neosidekick.com'}
    renderer = afx`
        <div @if={developmentBuild} style="font-size: 1.5em; font-weight: bold; background: orange; padding: 1rem; margin-bottom: 1rem;">You are using the Development Version of the API</div>
        <iframe style="width: 100%; min-height: 1000px; height: 100%; background: #3f3f3f;" src={props.apiDomain + '/chat/account-context/edit?apikey=' + apiKey}></iframe>
    `
}
